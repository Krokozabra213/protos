syntax = "proto3";

package auth;

option go_package = "github.com/Krokozabra213/protos/gen/go/sso;sso";

service Auth {
  rpc Register (RegisterRequest) returns (RegisterResponse);
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc IsAdmin (IsAdminRequest) returns (IsAdminResponse);
  rpc AppSault (AppSaultRequest) returns (AppSaultResponse);
  rpc Logout (LogoutRequest) returns (LogoutResponse);
  rpc Refresh(RefreshRequest) returns (RefreshResponse);
}

message RefreshRequest {
  string refresh_token = 1;
  int64 exp_access = 2; // время жизни access токена в секундах
  int64 exp_refresh = 3; // время жизни refresh токена в секундах
}

message RefreshResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message LogoutRequest {
  string refresh_token = 1;
}

message LogoutResponse {
  bool success = 1;
}

// перед стартом, приложение делает запрос на получение соли для генерации и валидирования jwt
message AppSaultRequest {
  int32 app_id = 1;
}

message AppSaultResponse {
  string sault = 1;
}

message RegisterRequest {
  string username = 1;
  string password = 2;
}

message RegisterResponse {
  int64 user_id = 1;
}

message LoginRequest {
  string username = 1;
  string password = 2;
  int32 app_id = 3;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message IsAdminRequest {
  int64 user_id = 1;
}

message IsAdminResponse {
  bool is_admin = 1;
}